import React from 'react';
import { motion } from 'framer-motion';
import Input from '../Input/Input';
import cross from '../../../utils/images/cross.svg';
import '../Quiz.css';
import SetScore from '../SetScore/SetScore';
import Hint from '../Hints/Hint';


export default function Step5() {
    const [selectedScore, setSelectedScore] = React.useState('');

    const hints = {
        a: 'Всегда помогает коллегам, в том числе и за рамками своей функции, даже если это требует значительных дополнительных усилий, проявляет инициативу в помощи коллегам. Играет активную роль в командном взаимодействии в рамках функционального блока, при распределении нагрузки отдает приоритет командным задачам не в ущерб выполнению персональных.',
        b: 'Видит когда коллегам необходима помощь и предлагает/оказывает ее по собственной инициативе. Играет активную роль в командном взаимодействии, помогает найти коллегам оптимальное решение при распределении нагрузки между командными задачами и персональными.',
        c: 'Всегда откликается на просьбы коллег и при наличии возможности помогает, проявляет инициативу если видит что необходима помощь или поддержка. Всегда учитывает интересы команды в своей работе, находит оптимальное решение при распределении нагрузки между командными задачами и персональными.',
        d: 'Неохотно соглашается помогать коллегам и смежным подразделениям, отказывает им поддержку только если это предусмотрено регламентами либо по прямому указанию руководства. Не всегда учитывает интересы команды в своей работе, при распределении нагрузки отдает приоритет персональным задачам.',
        e: 'Равнодушен и безучастен к трудностям и потребностям коллег, отказывает им в помощи. Ставит свои интересы выше интересов коллег, в ущерб команде.'
    }


    return (
        <>
            <img className='quiz__close-btn' src={cross} alt=''></img>
            <h2 className='quiz__title'>Мы - команда</h2>
            <p className='quiz__subtitle'>Командное взаимодействие</p>
            {selectedScore && <Hint score={selectedScore} hint={hints[selectedScore]} />}
            <SetScore setParentState={setSelectedScore} />
            <Input />
        </>
    )

}